------------ command: arity 1 -------------
?- jns_test:win(0)

   TV = Undefined

?- jns_test:one_ary_fail(p)

   TV = False

?- jns_test:instan(b)

   TV = False

----------- command arity 0 --------------
?- jns_test:zero_ary_true()

   TV = True

?- jns_test:zero_ary_fail()

   TV = False

?- jns_test:zero_ary_undef()

   TV = Undefined

----------- query: arity 1 --------------
?- jns_test:one_ary_undef(Answer).

   TV = Undefined
   Answer  = b

?- jns_test:instan(Answer).

   TV = True
   Answer  = a

?- jns_test:one_ary_fail(Answer).

   TV = False

?- jns_test:return_tuple(Answer).

   TV = True
   Answer  = ([1, 'a', ('a',)], ('b', 'c', 'd'), ())

?- jns_test:return_term(Answer).

   TV = True
   Answer  = ('plgTerm', 'p', [1], 'a', ('plgTerm', 'f', 'a'), ('plgTerm', 'g', 'b'))

------------ query: arity 2 -------------
?- basics:reverse(([1, 2, 3, {'a': {'b': 'c'}}],),Answer).

   TV = True
   Answer  = [{'a': {'b': 'c'}}, 3, 2, 1]

?- string:concat_atom((['a', 'b', 'c', 'd', 'e', 'f', 'g'],),Answer).

   TV = True
   Answer  = abcdefg

------------ query: arity 3 -------------
?- basics:append(([1, 2], [3, 4]),Answer).

   TV = True
   Answer  = [1, 2, 3, 4]

----------- done with test_cmd_query --------------
